# DataSource settings: set here configurations for the database connection
spring.datasource.url = jdbc:mysql://localhost:3306/spring
spring.datasource.username = root
spring.datasource.password = welcome1
spring.datasource.driverClassName = com.mysql.jdbc.Driver

# DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
#spring.datasource.name= # name of the data source
#spring.datasource.initialize=true # populate using data.sql
#spring.datasource.schema= # a schema (DDL) script resource reference
#spring.datasource.data= # a data (DML) script resource reference
#spring.datasource.sql-script-encoding= # a charset for reading SQL scripts
#spring.datasource.platform= # the platform to use in the schema resource (schema-${platform}.sql)
#spring.datasource.continue-on-error=false # continue even if can't be initialized
#spring.datasource.separator=; # statement separator in SQL initialization scripts
#spring.datasource.driver-class-name= # JDBC Settings...
#spring.datasource.url=
#spring.datasource.username=
#spring.datasource.password=
#spring.datasource.jndi-name # For JNDI lookup (class, url, username & password are ignored when set)
#spring.datasource.max-active=100 # Advanced configuration...
#spring.datasource.max-idle=8
#spring.datasource.min-idle=8
#spring.datasource.initial-size=10
#spring.datasource.validation-query=
#spring.datasource.test-on-borrow=false
#spring.datasource.test-on-return=false
#spring.datasource.test-while-idle=
#spring.datasource.time-between-eviction-runs-millis=
#spring.datasource.min-evictable-idle-time-millis=
#spring.datasource.max-wait=
#spring.datasource.jmx-enabled=false # Export JMX MBeans (if supported)


# JPA (JpaBaseConfiguration, HibernateJpaAutoConfiguration)
# Hibernate settings are prefixed with spring.jpa.hibernate.*
spring.jpa.database = MYSQL
spring.jpa.show-sql = true
spring.jpa.hibernate.ddl-auto = update
spring.jpa.hibernate.naming_strategy = org.hibernate.cfg.ImprovedNamingStrategy
#spring.jpa.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
#spring.jpa.properties.*= # properties to set on the JPA connection
#spring.jpa.open-in-view=true
#spring.jpa.database-platform=
#spring.jpa.generate-ddl=false # ignored by Hibernate, might be useful for other vendors
#spring.jpa.hibernate.naming-strategy= # naming classname
#spring.jpa.hibernate.ddl-auto= # defaults to create-drop for embedded dbs
#spring.data.jpa.repositories.enabled=true # if spring data repository support is enabled

# LOGGING
#logging.level.org.springframework.web: DEBUG
#logging.level.org.hibernate: INFO
#logging.path=/var/logs
#logging.file=myapp.log
#logging.config= # location of config file (default classpath:logback.xml for logback)
#logging.level.*= # levels for loggers, e.g. "logging.level.org.springframework=DEBUG" (TRACE, DEBUG, INFO, WARN, ERROR, FATAL, OFF)


# SSL
#server.port = 8443
#server.ssl.key-store = classpath:keystore.jks
#server.ssl.key-store-password = secret
#server.ssl.key-password = another-secret

# Email (MailProperties)
#spring.mail.host=smtp.acme.org # mail server host
#spring.mail.port= # mail server port
#spring.mail.username=
#spring.mail.password=
#spring.mail.default-encoding=UTF-8 # encoding to use for MimeMessages
#spring.mail.properties.*= # properties to set on the JavaMail session


# JMX ENDPOINT (EndpointMBeanExportProperties)
#endpoints.jmx.enabled=true
#endpoints.jmx.domain= # the JMX domain, defaults to 'org.springboot'
#endpoints.jmx.unique-names=false
#endpoints.jmx.static-names=

# SECURITY (SecurityProperties)
#security.user.name=user
#security.user.password=welcome1
#security.user.role=USER
#security.require-ssl=false # advanced settings ...
#security.enable-csrf=false
#security.basic.enabled=true
#security.basic.realm=Spring
#security.basic.path= # /**
#security.filter-order=0
#security.headers.xss=false
#security.headers.cache=false
#security.headers.frame=false
#security.headers.content-type=false
#security.headers.hsts=all # none / domain / all
#security.sessions=stateless # always / never / if_required / stateless
#security.ignored=false

